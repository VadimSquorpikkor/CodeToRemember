package com.sq._java_basic_course.integral; // Created by SquorpikkoR on 06.02.2017.

/*Реализуйте метод, выполняющий численное интегрирование заданной функции на заданном интервале
по формуле левых прямоугольников.
Функция задана объектом, реализующим интерфейс java.util.function.DoubleUnaryOperator.
Его метод applyAsDouble() принимает значение аргумента и возвращает значение функции в заданной точке.
Интервал интегрирования задается его конечными точками a и b, причем a<=b.
Для получения достаточно точного результата используйте шаг сетки не больше 10−6*/
//region EXAMPLE
/*Пример. Вызов
integrate(x -> 1, 0, 10)

должен возвращать значение 10.
*/
//endregion
//region P.S.
/*P.S. Если задача слишком легкая, то дополнительно можете реализовать динамический выбор шага сетки
по следующему алгоритму:
    - Вычислить приближенное значение интеграла функции при начальном значении шага сетки (например, 1).
    - Вычислить приближенное значение интеграла функции при более мелком шаге сетки
    (например, уменьшить шаг сетки в два раза).
    - Если разность двух последовательных приближений интеграла функции достаточно мала,
    то завершаем алгоритм и возвращаем текущее приближение в качестве результата.
    - Иначе возвращаемся к шагу 2.*/
//endregion

import java.util.function.DoubleUnaryOperator;

public class Main {

//////////////////С первой попытки!!!! В ответ нужно было написать только тело метода, поэтому делал только метод

    public static double integrate(DoubleUnaryOperator f, double a, double b) {
        double sum = 0;
        double step = 0.0000001;
        for (double i = a; i < b; i = i + step) {
            sum = sum + f.applyAsDouble(i)*step;
        }
        return sum;
    }
}
